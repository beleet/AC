language core;

// a constant function, specialized to Nat
fn Nat2Nat::const(f : fn(Nat) -> Nat) -> (fn(Nat) -> (fn(Nat) -> Nat)) {
  return fn(x : Nat) { return f; };
}

// addition of natural numbers
fn Nat::add(n : Nat) -> (fn(Nat) -> Nat) {
  return fn(m : Nat) {
    return Nat::rec(n, m, fn(i : Nat) {
      return fn(r : Nat) { return succ(r); }; });
  };
}

// sum of natural numbers from 1 to n
fn sum_of_naturals(n : Nat) -> Nat {
  return Nat::rec(n, 0, fn(i : Nat) {
    return fn(r : Nat) {
    return Nat::add(r)(succ(i));  // r := r + (i + 1)
  }; });
}

fn main(n : Nat) -> Nat {
  return sum_of_naturals(n);
}

